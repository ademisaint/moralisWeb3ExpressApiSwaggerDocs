openapi: 3.0.3
info:
  title: MORALIS WEB3 EXPRESS API - OpenAPI 3.0
  description: |-
    This express gets and make API calls from a single Web3 SDK for now (Morlais)
  contact:
    email: saintademilayo@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://web3-express-api.vercel.app/v1
tags:
  - name: Resolve 
    description: Resolve API
    externalDocs:
      description: Find out more on gitbook
      url: https://saintdevs-organization.gitbook.io/moralisweb3expressapi/
  - name: Token
    description: TokenAPI
    externalDocs:
      description: Find out more on gitbook
      url: https://saintdevs-organization.gitbook.io/moralisweb3expressapi/
  - name: Balance
    description: Balance API
paths:
  /resolveUdDomains/{domain} :
    get:
      tags:
        - Resolve
      summary: Resolve Unstoppable domain on the ETH network only
      description: Resolve an unstopple domain from the domain name
      operationId: updatePet
      parameters:
        - name: x-api-key
          in: header
          description: MORALIS API KEY
          required: true
          schema:
             type: string
             default: 
        - name: domain
          in: path
          description: address
          required: true
          schema:
             type: string
             default:
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolveud'
        '500':
          description: please add an x-api-key request header when sending requests.
  /resolveEns/{address}:
    get:
      tags:
        - Resolve
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: x-api-key
          in: header
          description: MORALIS API KEY
          required: true
          schema:
             type: string
             default: 
        - name: address
          in: path
          description: name from an ETH address
          required: true
          schema:
             type: string
             default:
      responses:
         '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resolve'          
         '500':
          description: please add an x-api-key request header when sending requests
  /getERC20Tokens/{address}:
    get:
      tags:
        - Token
      summary: get all ERC20 tokens owned by an address
      description: get all ERC20 tokens owned by an address.
      operationId: findtokenbyaddress
      parameters:
        - name: x-api-key
          in: header
          description: MORALIS API KEY
          required: true
          schema:
             type: string
             default: 
        - name: address
          in: path
          description: name from an ETH address
          required: true
          schema:
             type: string
             default:
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/token'          
        '500':
          description: please add an x-api-key request header when sending requests.
  /getERC20Transfers/{address}:
    get:
      tags:
        - Token
      summary:  get all ERC20 transfers by contract
      description: Returns a single pet
      operationId: gettransferbycontract
      parameters:
        - name: x-api-key
          in: header
          description: ID of pet to return
          required: true
          schema:
            type: string
        - name: address
          in: path
          description: address
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfer'          
        '500':
          description: please add an x-api-key request header when sending requests
  /getERC20TransfersByWallet/{address}:
    get:
      tags:
        - Token
      summary: get all ERC20 transfers by wallet
      description: ''
      operationId: gettransfersbywallet
      parameters:
        - name: x-api-key
          in: header
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: string
            format: int64
        - name: address
          in: path
          description: wallet address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transfersByWallet'   
        '500':
          description: please add an x-api-key request header when sending requests.
  /getERC20Metadata/{address}:
    get:
      tags:
        - Token
      summary: get ERC20 metadata by contract
      description: get metadata
      operationId: getmetadatabycontract
      parameters:
        - name: x-api-key
          in: header
          description: ''
          required: true
          schema:
            type: string
        - name: address
          in: path
          description: address
          required: true
          schema:
            type: string
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metadata'   
        '500':
          description: please add an x-api-key request header when sending requests.
  /getNativeBalance/{address}:
    get:
      tags:
        - balance
      summary: get the native balance of an address
      description: ''
      operationId: getbalance
      parameters:
        - name: x-api-key
          in: header
          description: ID of pet to update
          required: true
          schema:
            type: string
        - name: address
          in: path
          description: address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balance'
        '500':
          description: please add an x-api-key request header when sending requests
  /getERC20VaultBalance/{address}:
    get:
      tags:
        - balance
      summary: please add an x-api-key request header when sending requests.
      description: Returns a map of status codes to quantities
      operationId: getInventory
      parameters:
        - name: x-api-key
          in: header
          description: MORALIS API KEY
          required: true
          schema:
             type: string
             default: 
        - name: address
          in: path
          description: address
          required: true
          schema:
             type: string
             default:
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balance'
        '500':
          description: please add an x-api-key request header when sending requests
  /getMultiSigBalance/{address}:
    get:
      tags:
        - balance
      summary: get the native balance of a multi-signature wallet
      description: Place a new order in the store
      operationId: getMultiSigBalance
      parameters:
        - name: x-api-key
          in: header
          description: bla 
          required: true
          schema:
            type: string
        - name: address
          in: path
          description: address
          required: true
          schema:
             type: string
             default:
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balance'
        '500':
          description: please add an x-api-key request header when sending requests.
components:
  schemas:
    resolve:
      type: object
      properties:
        name:
          type: string
          example: vitalik.eth
    resolveud:
      type: object
      properties:
        address:
          type: string
          example: 0x8aaD44321A86b170879d7A244c1e8d360c99DdA8
    token:
      type: object
      properties:
        name:
          type: string
          format: int64
          example: good
          items:
            $ref: '#/components/schemas/token'
        token_address: 
          type: string
          example: 0xefd6c64533602ac55ab64442307f6fe2c9307305
        symbol:
          type: string
          example: APE,
        logo: 
          type: string
          example: null,
        thumbnail:
          type: integer
          example: null,
        decimals: 
          type: integer
          example: 18,
        balance: 
          type: integer
          example: 101715701444169451516503179
    transfer: 
      type: object
      properties:
        total:
          type: integer 
          example: null,
        page:
          type: integer
          example: 0,
        page_size:
          type: integer
          example: 100,
        cursor:
          type: integer 
          example: null,
        result:
          type: integer
          example: []
    transfersByWallet:
      type: object
      properties:
        total:
          type: integer 
          example: null,
        page:
          type: integer
          example: 0,
        page_size:
          type: integer
          example: 100,
        cursor:
          type: integer 
          example: null,
        result:
          type: integer
          example: []
    metadata: 
      type: object
      properties: 
        address: 
          type: string
          example: 0x1f9840a85d5af5bf1d1762f925bdaddc4201f984
        name: 
          type: string
          example: Uniswap,
        symbol: 
          type: string
          example: UNI,
        decimals:
          type: string
          example: 18
        logo: 
          type: string
          example: https://cdn.moralis.io/eth/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.webp,
        logo_hash:
          type:  string
          example: 064ee9557deba73c1a31014a60f4c081284636b785373d4ccdd1b3440df11f43,
        thumbnail:
          type: string
          example: https://cdn.moralis.io/eth/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984_thumb.webp,
        block_number:
          type: integer
          example: null,
        validated:
          type: boolean
          example: null,
    balance:
      type: object
      properties:
        balance:
          type: string
          example: 900051407680925461166