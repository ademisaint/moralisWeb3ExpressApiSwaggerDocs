{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger MEME MAKER API",
    "description": "Get, submit, add, update all memes be it funny, classic, stupid just name it. ",
    "termsOfService": "saintademilayo@gmail.com",
    "contact": {
      "email": "saintademilayo@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "See stoplight version",
    "url": "https://saintdev.stoplight.io/docs/saintdev/branches/main/efh99v288av4f-meme-maker-api"
  },
  "servers": [
    {
      "url": "http://alpha-meme-maker.herokuapp.com"
    }
  ],
  "tags": [
    {
      "name": "memes",
      "description": "Everything about memes",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://alpha-meme-maker.herokuapp.com"
      }
    }
  ],
  "paths": {
    "/:page/": {
      "get": {
        "tags": [
          "memes"
        ],
        "summary": "Gets top 24 memes",
        "description": "Gets top 24 results, page wise. Returns the next URL as a token.",
        "operationId": "getmemes",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page"
                }
              }
            }
          },
          "404": {
            "description": "url not found"
          }
        }
      }
    },
    "/add": {
      "post": {
        "tags": [
          "memes"
        ],
        "summary": "Adds a new meme to the database.",
        "description": "Adds a fresh meme to the repository. header authentication is necessary.",
        "operationId": "addmemes",
        "requestBody": {
          "description": "Create a new meme",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/memes"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/memes"
                }
              }
            }
          },
          "404": {
            "description": "url not found"
          }
        },
        "parameters": [
          {
            "name": "adminPassword",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name (must be unique)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Additional tags for searching",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "image",
            "in": "query",
            "description": "URL of the image",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topText",
            "in": "query",
            "description": "Default top text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bottomText",
            "in": "query",
            "description": "Default bottom text",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "detail",
            "in": "query",
            "description": "Information/history",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postSecret",
            "in": "header",
            "description": "default postSecret",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/memes/id": {
      "get": {
        "tags": [
          "memes"
        ],
        "summary": "Gets details of one particular meme, based on the meme ID:callbacks",
        "description": "Gets information about a specific meme depending on the meme ID; callbacks",
        "operationId": "findmemebyID",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/memes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "put": {
        "tags": [
          "memes"
        ],
        "summary": "Updates an existing meme in the database. Requires header authentication.",
        "description": "updates a meme that already exists in the database. header authentication is necessary.",
        "operationId": "updatememe",
        "responses": {
          "200": {
            "description": "operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/memes"
                },
                "examples": {
                  "sample output": {
                    "value": {
                      "code": "200",
                      "data": [],
                      "message": "POST successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Url Not Found"
          }
        },
        "parameters": [
          {
            "name": "putSecret",
            "in": "header",
            "description": "default putsecret",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "adminPassword",
            "in": "header",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "additional tags for searching",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "image",
            "in": "query",
            "description": "URL of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topText",
            "in": "query",
            "description": "default topText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bottomText",
            "in": "query",
            "description": "default bottomText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "description": "Information/history",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thumb",
            "in": "query",
            "description": "optional thumbnail image",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rank",
            "in": "query",
            "description": "ranking based on popularity",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/memes/submission": {
      "get": {
        "tags": [
          "memes"
        ],
        "summary": "Gets all the submissions for the given meme ID.",
        "description": "Obtains every contribution for the specified meme ID.",
        "operationId": "getmemessubmission",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/memes"
                },
                "examples": {
                  "sample output": {
                    "value": {
                      "code": 200,
                      "data": [],
                      "message": "GET successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Url Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "memes"
        ],
        "summary": "Adds a new submission (requires meme ID to be passed as a HTTP body paramater)",
        "description": "a new contribution is added (requires meme ID to be passed as a HTTP body paramater)",
        "operationId": "postmemesubmission",
        "responses": {
          "200": {
            "description": "operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/memes"
                },
                "examples": {
                  "sample output": {
                    "value": {
                      "code": "200",
                      "data": [],
                      "message": "POST successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Url Not Found"
          }
        },
        "parameters": [
          {
            "name": "memeID",
            "in": "query",
            "description": "meme identification",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "topText",
            "in": "query",
            "description": "default topText",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "botttomText",
            "in": "query",
            "description": "default bottomText",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "memes": {
        "type": "object",
        "properties": {
          "memeID": {
            "type": "string"
          },
          "topText": {
            "type": "string"
          },
          "bottomText": {
            "type": "integer"
          },
          "putsecret": {
            "type": "object"
          },
          "adminPassword": {
            "type": "object"
          },
          "image": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "thumb": {
            "type": "string"
          },
          "rank": {
            "type": "string"
          },
          "tags": {
            "type": "object"
          }
        }
      },
      "page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "bottomText": {
            "type": "string",
            "example": "good"
          },
          "image": {
            "type": "string",
            "example": "http://imgflip.com/s/meme/Grumpy-Cat.jpg,"
          },
          "name": {
            "type": "string",
            "example": "bima money"
          },
          "tags": {
            "type": "string",
            "example": "Tardar Sauce, Tabatha Bundesen, Felis domesticus"
          },
          "topText": {
            "type": "string",
            "example": null
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}